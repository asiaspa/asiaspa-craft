{# {{ craft.freeform.form(form, {
    labelClass: "form-label",
    inputClass: "form-control",
    instructionsBelowField: true,
    submitClass: "btn btn-success",
    overrideValues: {
        hiddenFieldHandle: entry.id,
    }
}).render() }} #}




{# {{ craft.formie.renderForm('repeater') }} #}

{# {% do craft.formie.registerAssets('repeater') %} #}

{% set form = form ?? null %}

{% set formie = craft.formie.forms.handle(form).one() %}

{% if formie %}
{{ craft.formie.renderForm(form) }}
<script>
    // Wait until the DOM is ready
    document.addEventListener('DOMContentLoaded', (event) => {
        // Fetch the form we want to deal with
        let $form = document.querySelector('#formie-form-{{ formie.id }}');

        // Find the CSRF token hidden input, so we can replace it
        let $csrfInput = $form.querySelector('input[name="CRAFT_CSRF_TOKEN"]');

        // Fetch the new token for the form and replace the CSRF input with our new one
        fetch('/actions/formie/csrf/input')
            .then(result => { return result.text(); })
            .then(result => { $csrfInput.outerHTML = result; });
    });
</script>
{% endif %}

{# original one use blitz functions to set up csrf #}

{#  
<div id="form-{{ form.one().handle }}">
    {{ craft.formie.renderForm(form.one()) }}
    <script>
    window.addEventListener("load", function () {
        var csrfInput = document.querySelector('#form-{{ form.one().handle }} form input[name="CRAFT_CSRF_TOKEN"]');
        fetch('/actions/blitz/csrf/token')
        .then(result => { return result.text(); })
        .then(result => {
            console.log(result);
            csrfInput.value = result;
        });
    })
    </script>
</div> #}




