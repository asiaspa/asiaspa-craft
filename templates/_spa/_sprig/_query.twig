{% set userLocation = craft.maps.getUserLocation() %}
{% set q = q|default(userLocation.address) %}
{% set entries = entries ?? [] %}
{% set locationEntries = locationEntries ?? [] %}
{# {% set coordinates = [] %} #}

{% if q %}
{% set entriesIds = [] %}
{% set locationIds = [] %}

{# get list of entries #}
{% set entriesIds = craft.entries 
    .section('spa')
    .status(['live','pending','expired'])
    .title('*' ~ q ~ '*')
    .ids() 
%}

{% set locationIds = craft.entries
    .section('spa')
    .status(['live','pending','expired'])
    .spaContactMap({
        location: q,
        radius: 100,
        unit: 'm',
    })
    .orderBy('distance')
    .ids() 
%}

{% set entriesIds = entriesIds | merge(locationIds) %}
{% set entries = craft.entries
    .section('spa')
    .status(['live','pending','expired'])
    .id(entriesIds)
    .all() 
%}

{% set entriesByStatus = entries|group('status') %}
{# {% set locationEntries = craft.entries.section('spa').id(locationIds).all() %} #}

{% set markers %}[
{%- for entry in entries -%}[&quot;{{ entry.title }}&quot;, {{ entry.spaContactMap.lat}},{{ entry.spaContactMap.lng }}]{% if not loop.last %},{% endif %}
{%- endfor -%}]
{% endset %}

{% endif %}



{% if sprig.include %}
<section class="sticky top-0 z-20 bg-white">
    <a class="absolute top-0 left-0 block h-20 py-4 pl-screen-xl" href="">
        {% if website.websiteLogoSimple | length %}
        <img class="w-auto h-12"
            src="{{ rev(website.websiteLogoSimple[0].url()) }}" />
        {% endif %}
    </a>
    
    {# search form #}
    <div class="max-w-screen-sm px-24 py-4 mx-auto ">
        <div class="flex items-center justify-between border-b border-black">
        <input class="w-full h-12 appearance-none bg-transparentrounded-none"
            sprig
            s-trigger="keyup changed"
            s-target="#spa-results"
            s-swap="outerHTML"
            type="search"
            name="q"
            value="{{ q }}" 
            placeholder="Search Spa">
            <span class="block">{% include "_component/_icon" with {"icon":"zoom-24"} %}</span>
        </div>
    </div>
</section>
{% endif %}


<div class="fixed inset-0 flex flex-row mt-20" id="spa-results">
    <div class="md:block md:w-1/2" id="spa-map" 
        data-centername="{{ entries|first.title|default('null') }}"
        data-centerlat="{{ entries|first.spaContactMap.lat|default('-25.63') }}"
        data-centerlng="{{ entries|first.spaContactMap.lng|default('131.044') }}"
        data-markers="{{ markers }}">
        {{ craft.maps.embed({
            id: 'map',
            center: {lat: 22.533603, lng: 114.061573},
            options: {
                disableDefaultUI: true,
                draggable: true
            },
        }) }}
    </div>
    
    <div class="w-full overflow-y-auto md:w-1/2 px-edge">
    {{ userLocation.address }}

        <h2 class="pb-8 text-3xl font-hairline font-headline">Showing {{ entries | length }} Results</h2>
        <div class="grid gap-8 sm:grid-cols-2 md:grid-cols-1 lg:grid-cols-2" >
            {% for group, entries in entriesByStatus %}
                {% for entry in entries %}
                {% include "_spa/_card" with {'entry': entry} %}
                {% endfor %}
            {% endfor %}
        </div>
    </div>
</div>

<script>  
function loadMarkers() {
    var bounds = new google.maps.LatLngBounds();
    var spaMap = document.querySelector('#spa-map')
    const spasArray = JSON.parse(spaMap.dataset.markers);
    console.log(spasArray)
    for (let i = 0; i < spasArray.length; i++) {
        var location = spasArray[i];
        var position = new google.maps.LatLng( location[1], location[2]);
        bounds.extend(position);
        var marker = new google.maps.Marker({
            animation: google.maps.Animation.DROP,
            map: map, 
            position: position,
            title: location[ 0 ]
        });
        
        google.maps.event.addListener( marker, 'click', ( 
            function( marker, i ) {
                return function() {
                    var infowindow = new google.maps.InfoWindow();
                    infowindow.setContent( location[0] );
                    infowindow.open( map, marker );
                }
            }
        )( marker, i ) );
        // fit map to bounds
        map.fitBounds( bounds );
    }
}

window.onload = function() {
    loadMarkers()
};

document.body.addEventListener('htmx:afterSettle', function() {
    var spaMap = document.querySelector('#spa-map')
    console.log(spaMap.dataset.centername)
    const center = { lat: Number(spaMap.dataset.centerlat), lng: Number(spaMap.dataset.centerlng)};
    console.log(center);
    init_map(); 
    map.setCenter(center);
    loadMarkers()

});
</script>
<style>
    #map {width:100%; height:100%}
</style>

